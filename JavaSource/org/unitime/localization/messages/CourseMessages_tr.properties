/*
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 *
 * The Apereo Foundation licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

# Default: Filter
filter=Filtre

# Default: Optional Columns
filterOptionalColumns=Seçmeli Sütunlar

# Default: Manager
filterManager=Yönetici

# Default: Instructional Type
filterInstructionalType=Öğretici Tip

# Default: Instructor
filterInstructor=Eğitici

# Default: Assigned Time
filterAssignedTime=Verilen SÜre

# Default: Assigned Room
filterAssignedRoom=Verilen Oda

# Default: from
filterTimeFrom=İtibaren

# Default: for
filterTimeFor=Süresiyle

# Default: minutes
filterTimeMinutes=Dakika

# Default: Parent Class
propertyParentClass=Ana SInıf

# Default: Parent Scheduling Subpart
propertyParentSchedulingSubpart=Ana Programlama Alt Bölüm

# Default: External Id
propertyExternalId=Dış Id

# Default: Enrollment
propertyEnrollment=Kayıt

# Default: Class Limit
propertyClassLimit=Sınıf Limiti

# Default: Minimum Class Limit
propertyMinimumClassLimit=Minimum Sınıf Limiti

# Default: Maximum Class Limit
propertyMaximumClassLimit=Maksimum Sınıf Limiti

# Default: Number of Rooms
propertyNumberOfRooms=Oda Sayısı

# Default: Room Ratio
propertyRoomRatio=Oda Orantısı

# Default: Minimum Room Capacity
propertyMinimumRoomCapacity=Minimum Oda Kapasitesi

# DefaultMessage: Date Pattern
propertyDatePattern=Tarih Modeli

# Default: Date
propertyDate=Tarih

# Default: Display Instructors
propertyDisplayInstructors=Ekran Eğiticileri

# Default: Student Scheduling
propertyEnabledForStudentScheduling= Öğrenci Planlaması

# Default: Student Schedule Note
propertyStudentScheduleNote=Öğrenci Planlaması Notu

# Default: Requests / Notes
propertyRequestsNotes=İstekler/Notlar

# Default: Instructors
propertyInstructors=Eğiticiler

# Default: Instructor
propertyInstructor=Eğitici

# Default: Time
propertyTime=Zaman

# Default: Examination Periods
propertyExaminationPeriods=Sınav Zamanları

# Default: Room Groups
propertyRoomGroups=Oda Grupları

# Default: Rooms
propertyRooms=Odalar

# Default: Room
propertyRoom=Oda

# Default: Buildings
propertyBuildings=Binalar

# Default: Room Features
propertyRoomFeatures=Oda Özellikleri

# Default: Available Rooms
propertyAvailableRooms=Uygun Odalar

# Default: Distribution
propertyDistribution=Dağıtım

# Default: Initial Assignment
propertyInitialAssignment=İlk Ödev

# Default: Student Conflicts
propertyStudentConflicts=Öğrenci Anlaşmazlıkları

# Default: Violated Constraints
propertyViolatedConstraints=İhlal Sınırlamaları

# Default: Room Locations
propertyRoomLocations=Oda Lokasyonları

# Default: Time Locations
propertyTimeLocations=Zaman Lokasyonları

# Default: Date Patterns
propertyDatePatterns=Tarih Modelleri

# Default: Minimum Room Size
propertyMinimumRoomSize=Minimum Oda Boyutu

# Default: Note
propertyNote=Not

# Default: Automatic Spread In Time
propertyAutomaticSpreadInTime=Zamanda Otomatik Yayılma

# Default: Student Overlaps
propertyStudentOverlaps=Öğrenci Çakışmaları

# Default: Credit
propertyCredit=Kredi

# Default: Subpart Credit
propertySubpartCredit=Alt Bölüm Kredisi

# Default: Credit Type
propertyCreditType=Kredi Türü

# Default: Credit Unit Type
propertyCreditUnitType=Kredi Birim Türü

# Default: Units
propertyUnits=Birimler

# Default: Max Units
propertyMaxUnits=Maksimum Birimler

# Default: Fractional Increments Allowed
propertyFractionalIncrementsAllowed=İzin Verilen Kademeli Artırımlar

# Default: Configuration Name
propertyConfigurationName=Yapılandırma Adı

# Default: Unlimited Enrollment
propertyUnlimitedEnrollment=Limitsiz Kayıt

# Default: Configuration Limit
propertyConfigurationLimit= Yapılandırma Limiti

# Default: Course Catalog
propertyCourseCatalog=Ders Kataloğu

# Default: Title
propertyCourseTitle=Ders Adı

# Default: Type
propertyCourseType=Ders Türü

# Default: Schedule of Classes Note
propertyScheduleOfClassesNote=Sınıf Notları Planlaması

# Default: Consent
propertyConsent=İzin

# Default: Coordinators
propertyCoordinators=Koordinatörler

# Default: Take Course Demands from Offering
propertyTakeCourseDemandsFromOffering=Tekliflerden Ders Talepleri Alma

# Default: Instructional Offering Limit
propertyIOLimit=Eğitici Teklif Limiti

# Default: Course Offerings
propertyCourseOfferings=Ders Teklifleri

# Default: Scheduling Subpart Limits
propertySchedulingSubpartLimits=Alt Bölüm Limitlerini Planlama

# Default: All //used in Multiple Class Setup, Assign Instructors
propertyAll=Hepsi

# Default: By Reservation Only
propertyByReservationOnly=Sadece Rezervasyonla Yapılan

# Default: Last Enrollment
propertyLastEnrollment=Son Kayıt

# Default: Projected Demand
propertyProjectedDemand=Projeleşmiş Talep

# Default: Offering Limit
propertyOfferingLimit=Teklif Edilen Limit

# Default: Department
propertyDepartment=Bölüm

# Default: Account Name
propertyAccountName=Hesap Adı

# Default: First Name
propertyFirstName=İlk Ad

# Default: Middle Name
propertyMiddleName=İkinci Ad

# Default: Last Name
propertyLastName0Soyad

# Default: Academic Title
propertyAcademicTitle=Akademik Ünvan

# Default: Email
propertyEmail=Email

# Default: Position
propertyInstructorPosition=Eğitici Pozisyonu

# Default: Note
propertyNotes=Notlar

# Default: Ignore Too Far
propertyIgnoreTooFar=Görmezden Gelinenler

# Default: Student Accommodations
propertyAccommodations=Öğrenci Konaklamaları

# Default: this one
messageThisOne=Bu //used in getAssignmentTable - if the initial assignment is "this one"

//	@DefaultMessage("Parent Class:")
//	String propertyParentClass();

# Default: Normal
examSeatingTypeNormal=Normal Sınav Yerleşim Türü

# Default: Exam
examSeatingTypeExam=Sınav Yerleşim Türü

# Default: examinations
examinations=Sınavlar //used in ExamsAction.java, in PdfWebTable getTable

# Default: Sort classes only within scheduling subparts
checkSortWithinSubparts=Alt Bölümler İçinde Sırala

# Default: All
dropDeptAll=Tüm Bölümler

# Default: All
dropManagerAll= Tüm Yöneticiler

# Default: Department
dropDeptDepartment=Bölüm

# Default: All
dropITypeAll=Bütün Türler

# Default: Default
dropDefaultDatePattern=Varsayılan Tarih Modeli

# Default: External Id
columnExternalId=Dış Id

# Default: Enrollment Information
columnEnrollmentInformation=Kayıt Bilgisi

# Default: Enrollment
columnDemand=Kayıt Talebi

# Default: Last Enrollment
columnLastDemand=Son Kayıt Talebi

# Default: Projected Demand
columnProjectedDemand=Projeleştirilmiş Talep

# Default: Limit
columnLimit=Limit

# Default: Room Ratio
columnRoomRatio=Oda Orantısı

# Default: Room<br>Ratio
columnRoomRatioBr=Oda Orantısı Birimi

# Default: Manager
columnManager=Yönetici

# Default: Date/Time Information
columnDateTimeInformation=Tarih/Saat Bilgisi

# Default: Date Pattern
columnDatePattern=Tarih Modeli

# Default: Minutes Per Week
columnMinPerWk=Haftalık Dakikalar

# Default: Time Pattern
columnTimePattern= Zaman Modeli

# Default: Preferences
columnPreferences=Öncelikler

# Default: Instructor
columnInstructor=Eğitici

# Default: Timetable
columnTimetable=Zaman Çizelgesi

# Default: Catalog Information
columnCatalogInformation=Katalog Bilgisi

# Default: Title
columnTitle=Başlık

# Default: Course Credit
columnOfferingCredit=Ders Kredisi

# Default: Subpart Credit
columnSubpartCredit=Alt Bölüm Kredisi

# Default: Consent
columnConsent=İzin

# Default: Catalog
columnCourseCatalog=Ders Kataloğu

# Default: Schedule Print Note
columnSchedulePrintNote=Basılmış Notu Programlama

# DefaultMessage: Student Schedule Note
columnStudentScheduleNote=Öğrenci Planı Notu

# Default: Note to Schedule Manager
columnNote=Planlama Yöneticisine Not

# Default: Examinations
columnExams=Sınavlar

# Default: Examination
columnExam=Sınav

# Default: Class
columnClass=Sınıf

# Default: {0} {1} Examination
tooltipExam(String label, String type)=(Sınav Etiketi, Sınav Türü)

# Default: Name
columnExamName=Sınav Adı

# Default: Period
columnExamPeriod=Sınav Periyodu

# Default: Room
columnExamRoom=Sınav Salonu

# Default: Time
columnTimePref=Tercih Edilen Zaman

# Default: Room/Group
columnRoomGroupPref=Tercih Edilen Sınıf/Grup

# Default: Bldg
columnBuildingPref=Tercih Edilen Bina

# Default: Room
columnRoomPref=Tercih Edilen Sınıf

# Default: Features
columnRoomFeaturePref=Tercih Edilen Sınıf Özellikleri

# Default: Distribution
columnDistributionPref=Tercih Edilen Dağılım

# Default: Room
columnAllRoomPref=Tercih Edilen Tüm Sınıflar

# Default: Time
columnAssignedTime=Verilen Zaman

# Default: Room
columnAssignedRoom=Verilen Sınıf

# Default: Room Cap
columnAssignedRoomCapacity=Verilen Sınıf Kapasitesi

# Default: Name
columnInstructorName=Öğretim Elemanı Adı

# Default: % Share
columnInstructorShare: % Paylaşımı

# Default: Check Conflicts
columnInstructorCheckConflicts=Öğretim Elemanı Kontrol Karmaşaları

# Default: &nbsp;Check<br>Conflicts
columnInstructorCheckConflictsBr=Öğretim Elemanı Kontrol Karmaşaları Birimi

# Default: Position
columnInstructorPosition=Öğretim Elemanı Pozisyonu

# Default: Note
columnInstructorNote=Öğretim Elemanı Notu

# Default: Class<BR>Assignments
columnInstructorClassAssignments=Öğretim Elemanı Sınıf Ödevleri

# Default: Class\nAssignments
columnInstructorClassAssignmentsPDF=Sınıf Ödevleri PDF //has a new line ("\n") for printing out pdf

# Default: Exam<BR>Assignments
columnInstructorExamAssignments=Sınav Ödevleri

# Default: Exam\nAssignments
columnInstructorExamAssignmentsPDF()=Sınav Ödevleri //has a new line ("\n") for printing out pdf

# Default: Ignore<BR>Too Far
columnInstructorIgnoreTooFar=Öğretim Elemanının Görmezden Geldikleri

# Default: Ignore\nToo Far
columnInstructorIgnoreTooFarPDF=Görmezden Gelinenler PDF

# Default: Classes / Courses
columnExamClassesCourses=Sınav Sınıfları/Dersleri

# Default: Type
columnExamType=Sınav Tipi

# Default: Length
columnExamLength=Sınav Süresi

# Default: Seating<br>Type
columnExamSeatingType=Sınav Yerleşim Türü

# Default: Size
columnExamSize=Sınav Boyutu

# Default: Max<br>Rooms
columnExamMaxRooms=Maksimum Sınav Salonu

# Default: Instructor
columnExamInstructor=Sınav Gözlemcisi

# Default: Period<br>Preferences
columnExamPeriodPreferences=Sınav Süresi Öncelikleri

# Default: Room<br>Preferences
columnExamRoomPreferences=Sınav Salonu Öncelikleri

# Default: Distribution<br>Preferences
columnExamDistributionPreferences=Sınav Dağılımı Öncelikleri

# Default: Assigned<br>Period
columnExamAssignedPeriod=Sınava Verilen Süre

# Default: Assigned<br>Room
columnExamAssignedRoom=Sınava Verilen Salon

# Default: Student<br>Conflicts
columnExamStudentConflicts=Sınavda Öğrenci Kargaşalıkları

# Default: Subject
columnExamSubject=Sınav Konusu

# Default: Course
columnExamCourse=Sınav Dersi

# Default: External Id
columnExamExternalId=SInav Dış Id

# Default: Instructional Type
columnExamInstructionalType=Sınav Direktif Türü

# Default: Section
columnExamSection=Sınav Bölümü

# Default: Date
columnExamDate=Sınav Tarihi

# Default: Time
columnExamTime=Sınav Zamanı

# Default: Type
columnDistrPrefType=Öncelik Türü

# Default: Structure
columnDistrPrefStructure=Öncelik Yapısı

# Default: Owner
columnDistrPrefOwner=Öncelik Sahibi

# Default: Class
columnDistrPrefClass=Öncelik Sınıfı

# Default: Min Limit<br>per Class
columnSubpartMinLimitPerClass=Her Sınıf İçin Alt Bölüm Minimum Limiti

# Default: Max Limit<br>per Class
columnSubpartMaxLimitPerClass=Her Sınıf İçin Alt Bölüm Maksimum Limiti

# Default: Number<br>of Classes
columnSubpartNumberOfClasses=Sınıf Sayısı Alt Bölümü

# Default: Minutes<br>per Week
columnSubpartMinutesPerWeek=Her Hafta İçin Alt Bölüm Dakikaları

# Default: Number<br>of Rooms
columnSubpartNumberOfRooms=Oda Sayısı Alt Bölümleri

# Default: Room<br>Ratio
columnSubpartRoomRatio=Oda Orantısı Alt Bölümü

# Default: Managing<br>Department
columnSubpartManagingDepartment=Yönetim Bölümü Alt Bölümü

# Default: Limit<br>per Class
columnSubpartLimitPerClass=Her Sınıf İçin Alt Bölüm Limiti

# Default: Offering
columnCrossListsOffering=Teklif Çapraz Listeleri

# Default: Controlling
columnCrossListsControlling=Kontrol Çapraz Listeleri

# Default: Reserved
columnCrossListsReserved=Ayrılmış Çapraz Listeler

# Default: Projected
columnCrossListsProjected=Projelenmiş Çapraz Listeler

# Default: Last Term
columnCrossListsLastTerm=Çapraz Listeler Son Terimi

# Default: Allow<br>variable limits
columnAllowVariableLimits=İzin Verilen Çeşitli Limitler

# Default: Enroll
columnEnroll=Kayıt

# Default: Nbr<br>Rms
columnNbrRms=Sınıf Sayısı

# Default: Managing Department
columnManagingDepartment=Yönetim Bölümü

# Default: Display&nbsp;<br>Instr
columnDisplayInstr=Görüntü Talimatları

# Default:Student&nbsp;<br>Scheduling
columnStudentScheduling=Öğrenci Planlaması

# Default: Instructors
columnInstructors=Eğitmenler

# Default: Display
columnDisplay=Görüntü

# Default: Min
columnMin=Minimum

# Default: Max
columnMax=Maksimum

# Default: Reserved
columnReserved=Ayrılanlar

# Default: Schedule of Classes Note
columnScheduleOfClassesNote=Sınıf Notlarının Planlanması

# Default: Demands From
columnDemandsFrom=Talep Edilenler

# Default: Login
columnLogin=Giriş

# Default: Department
columnDepartment=Bölüm

# Default: Type
columnCourseType=Ders Türü

# Default: Credit
columnCredit=Kredi

# Default: Total
rowCrossListsTotal=Çapraz Listelerin Tümü

# Default: Not assigned.
messageNotAssigned=Atanmamışlar

# Default: {0} - Disabled For Student Scheduling.
tooltipDisabledForStudentScheduling(String classLabelWithTitle)=Öğrenci Planlamasına Kapatılmış

# Default: Has Schedule Print Note
altHasSchedulePrintNote=Planlama Çıktısı Notu

# Default: Has Course Offering Note
altHasCourseOfferingNote=Ders Önerisi Notu

# Default: Has Note to Mgr
altHasNoteToMgr=Yöneticiye Not

# Default: Delete
altDelete=Sil

# Default: Move Up
altMoveUp=Mevkiide Yükselme

# Default: Move Down
altMoveDown=Mevkiide Düşme

# Default: Limits do not match
altCrossListsLimitsDoNotMatch=Çapraz Listelerde Eşleşmeyen Limitler

# Default: Limits do not match
altLimitsDoNotMatch=Eşleşmeyen Limitler

# Default: Controlling Course
altControllingCourse=Kontrol Dersi

# Default: Not Available
altNotAvailableExternalId=Uygun Olmayan Dış Id

# Default: Yes
altYes=Evet //an alt text to a check (as in Ignore Too Far - Checked)

# Default: Configuration {0}
labelConfiguration(String name)=Etiket Yapılandırması

# Default: Configuration {0} ({1})
labelConfigurationWithInstructionalMethod(String name, String instructionalMethod)=Yol Gösterici Metodlarla Ayarlama

# Default: {0} Not Offered Courses
labelNotOfferedCourses(String subjectAreaAbbv)=Önerilmeyen Dersler

# Default: {0} Offered Courses
labelOfferedCourses(String subjectAreaAbbv)=Önerilen Dersler

# Default: There are no courses currently offered for {0} subject.
errorNoCoursesOffered(String subjectAreaAbbv)=Önerilen Ders Yok.

# Default: All courses are currently being offered for {0} subject.
errorAllCoursesOffered(String subjectAreaAbbv)=Önerilen Bütün Dersler

# Default: Sort By
filterSortBy=Düzenleme Biçimi

# Default: Cross Lists
filterCrossList=Çapraz Listeler

# Default: Show cross-listed classes
showCrossListedClasses=Çapraz Listeli Sınıfları Göster

# Default: Subject
filterSubject=Konu

# Default: Course Number
filterCourseNumber=Ders Kodu

# Default: Search
# StrutsAction(
		value = "searchInstructionalOfferings",
		apply = InstructionalOfferingSearchAction.class
	)
actionSearchInstructionalOfferings=Eğitici Teklifler Ara

# DefaultMessage("Search")
# StrutsAction(
		value = "searchClasses",
		apply = ClassSearchAction.class
	)
actionSearchClasses=Sınıfları Ara

# Default: Search
actionSearchInstructors=Eğitimcileri Ara

# Default: Export PDF
# StrutsAction: exportPdf
actionExportPdf=PDF'yi Dışarı Aktar

# Default: Worksheet PDF
# StrutsAction: worksheetPdf
actionWorksheetPdf=Çalışma Dosyası PDF

# Default: Add New
# StrutsAction: addInstructionalOfferings
actionAddNewInstructionalOffering=Yeni Eğitici Teklif Ekle

# Default: Edit Class
actionEditClass=Sınıfı Düzenle

# Default: Add Distribution Preference
actionAddDistributionPreference=Dağılım Önceliği Ekle

# Default: Assign
actionOpenClassAssignmentDialog=Açık Sınıf Görevi Diyaloğu

# Default: Previous
actionPreviousClass=Önceki Sınıf

# Default: Previous
actionPreviousSubpart=Önceki Alt Bölüm

# Default: Previous
actionPreviousInstructor=Önceki Eğitmen

# Default: Previous
actionPreviousExamination=Önceki Sınav

# Default: Previous
actionPreviousIO=Önceki Girdi-Çıktı

# Default: Next
actionNextClass=Sıradaki Sınıf

# Default: Next
actionNextSubpart=Sıradaki Alt Bölüm

# Default: Next
actionNextInstructor=Sıradaki Eğitmen

# Default: Next
actionNextExamination=Sıradaki Sınav

# Default: Next
actionNextIO=Sıradaki Girdi-Çıktı

# Default: Back
actionBackClassDetail=Sınıf Detayına Geri Dönme

# Default: Back
actionBackSubpartDetail=Alt Bölüm Detayına Geri Dönme

# Default: Back
actionBackToDetail=Detaya Geri Dönme

# Default: Back
actionBackToIODetail=Girdi-Çıktı Detayına Geri Dönme

# Default: Update
actionUpdatePreferences=Öncelikleri Güncelle

# Default: Update
actionUpdateExamination=Sınavı Güncelle

# Default: Update
actionUpdateConfiguration=Yapılandırmayı Güncelle

# Default: Update
actionUpdateCourseOffering=Ders Tekliflerini Güncelle

# Default: Save
actionSaveCourseOffering=Ders Tekliflerini Kaydet

# Default: Update
actionUpdateCrossLists=Çapraz Listeleri Güncelle

# Default: Update
actionUpdateMultipleClassSetup=Çoklu Sınıf Kurulumunu Güncelle

# Default: Clear Class Preferences
actionClearClassPreferences=Sınıf Önceliklerini Temizle

# Default: Clear Subpart Preferences
actionClearSubpartPreferences=Alt Bölüm Önceliklerini Temizle

# Default: Clear Instructor Preferences
actionClearInstructorPreferences=Eğitimci Önceliklerini Temizle

# Default: Add Time Preference
actionAddTimePreference=Zaman Önceliği Ekle

# Default: Delete
actionRemoveTimePattern=Zaman Modelini Kaldır

# Default: Add Room Group Preference
actionAddRoomGroupPreference=Sınıf Grubu Önceliği Ekle

# Default: Delete
actionRemoveRoomGroupPreference=Sınıf Grubu Önceliğini Kaldır

# Default: Delete
titleRemoveDatePatternPreference=Tarih Modeli Önceliğini Kaldır

# Default: Add Room Preference
actionAddRoomPreference=Sınıf Önceliği Ekle

# Default: Add Date Pattern Preference
actionAddDatePatternPreference=Tarih Modeli Önceliğini Ekle

# Default: Delete
actionRemoveRoomPreference=Sınıf Önceliğini Kaldır

# Default: Delete
actionRemoveDatePatternPreference=Tarih Modeli Önceliğini Kaldır

# Default: Add Building Preference
actionAddBuildingPreference=Bina Önceliğini Ekle

# Default: Delete
actionRemoveBuildingPreference=Bina Önceliğini Kaldır

# Default: Add Room Feature Preference
actionAddRoomFeaturePreference=Sınıf Özelliği Önceliğini Ekle

# Default: Delete
actionRemoveRoomFeaturePreference=Sınıf Özelliği Önceliğini Kaldır

# Default: Delete
actionRemoveDistributionPreference=Dağılım Önceliğini Kaldır

# Default: Delete
actionDeleteConfiguration=Yapılandırmayı Kaldır

# Default: Save
actionSaveExamination=Sınavı Kaydet

# Default: Save
actionSaveConfiguration=Yapılandırmayı Kaydet

# Default: Add Instructor
actionAddInstructor=Eğitmeni Ekle

# Default: Add New Instructor
actionAddNewInstructor=Yeni Eğitmen Ekle

# Default: Delete
actionRemoveInstructor=Eğitmeni Kaldır

# Default: Add Examination
actionAddExamination=Sınavı Ekle

# Default: Edit Subpart
actionEditSubpart=Alt Bölümü Düzenle

# Default: Clear Class Preferences
actionClearClassPreferencesOnSubpart=Alt Bölümdeki Sınıf Önceliklerini Temizle

# Default: Add
actionAddInstructionalTypeToConfig=Yapılandırmaya Eğitici Tür Ekle

# Default: Add
actionAddCourseToCrossList=Çapraz Listeye Ders Ekle

# Default: Add Coordinator
actionAddCoordinator=Koordinatör Ekle

# Default: Delete
actionRemoveCoordinator=Koordinatör Kaldır

# Default: Unassign All
actionUnassignAllInstructorsFromConfig=Yapılandırmada Bütün Eğitimcileri Görevden Al

# Default: Update
actionUpdateClassInstructorsAssignment=Sınıf Eğitimcileri Atamasını Güncelle

# Default: Add Configuration
actionAddConfiguration=Yapılandırma Ekle

# Default: Cross Lists
actionCrossLists=Çapraz Listeler

# Default: Make Offered
actionMakeOffered=Teklifi Yap

# Default: Make NOT Offered
actionMakeNotOffered=Teklifi Yapma

# Default: Delete
actionDeleteIO=Girdi-Çıktıyı Sil

# Default: Back
actionBackToIOList=Girdi-Çıktı Listesine Geri Gel

# Default: Edit Course Offering
actionEditCourseOffering=Ders Teklifini Düzenle

# Default: Add Course Offering
actionAddCourseOffering=Ders Teklifini Ekle

# Default: Lock
actionLockIO=Girdi-Çıktıyı Kilitle

# Default: Unlock
actionUnlockIO=Girdi-Çıktı Kilidini Aç

# Default: Back
actionBackIODetail=Girdi-Çıktı Detayına Geri Gel

# Default: Edit Configuration
actionEditConfiguration=Yapılandırmayı Düzenle

# Default: Class Setup
actionClassSetup=Sınıf Kurulumu

# Default: Assign Instructors
actionAssignInstructors=Eğitimcileri Ata

# Default: Manage Instructor List
actionManageInstructorList=Eğitimci Listesini Yönet

# Default: Select Instructor
actionSelectInstructor=Eğitimci Seç

# Default: Cancel
actionCancel=İptal Et

# Default: Save
actionSaveInstructor=Eğitimciyi Kaydet

# Default: Update
actionUpdateInstructor=Eğitimciyi Güncelle

# Default: Delete
actionDeleteInstructor=Eğitimciyi Sil

# Default: Lookup
actionLookupInstructor=Eğitimciye Göz At

# Default: Back
actionBackToInstructors=Eğitimcilere Geri Dön

# Default: S
accessSearchInstructionalOfferings=Eğitici Teklifleri Ara

# Default: S
accessSearchClasses=Sınıfları Ara

# Default: S
accessSearchInstructors=Eğitimcileri Ara

# Default: P
accessExportPdf=PDF'yi Açığa Çıkar

# Default: W
accessWorksheetPdf=Çalışma Dosyası PDF'si

# Default: A
accessAddNewInstructionalOffering=Yeni Eğitici Teklif Ekle

# Default: E
accessEditClass=Sınıfı Düzenle

# Default: A
accessAddDistributionPreference=Dağıtım Önceliği Ekle

# Default: X
accessOpenClassAssignmentDialog=Sınıf Görevi Diyaloğunu Aç

# Default: P
accessPreviousClass=Önceki Sınıf

# Default: P
accessPreviousSubpart=Önceki Alt Bölüm

# Default: P
accessPreviousInstructor=Önceki Eğitimci

# Default: P
accessPreviousExamination=Önceki Sınav

# Default: P
accessPreviousIO=Önceki Girdi-Çıktı

# Default: N
accessNextClass=Sıradaki Sınıf

# Default: N
accessNextSubpart=Sıradaki Alt Bölüm

# Default: N
accessNextInstructor=Sıradaki Eğitimci

# Default: N
accessNextExamination=Sıradaki Sınav

# Default: N
accessNextIO=Sıradaki Girdi-Çıktı

# Default: B
accessBackClassDetail=Sınıf Detayına Geri Dön

# Default: B
accessBackSubpartDetail=Alt Bölüm Detayına Geri Dön

# Default: B
accessBackToDetail=Detaya Geri Dön

# Default: B
accessBackToIODetail=Girdi-Çıktı Detayına Geri Dön

# Default: I
accessInstructionalOfferingDetail=Eğitici Teklif Detayına Geri Dön

# Default: S
accessSchedulingSubpartDetail=Alt Bölüm Detayı Planlaması

# Default: U
accessUpdatePreferences=Öncelikleri Güncelle

# Default: U
accessUpdateExamination=Sınavları Güncelle

# Default: U
accessUpdateConfiguration=Yapılandırmayı Güncelle

# Default: U
accessUpdateCourseOffering=Ders Teklifini Güncelle

# Default: S
accessSaveCourseOffering=Ders Teklifini KAydet

# Default: U
accessUpdateCrossLists=Çapraz Listeleri Güncelle

# Default: U
accessUpdateMultipleClassSetup=Çoklu Sınıf Kurulumunu Güncelle

# Default: C
accessClearClassPreferences=Sınıf Önceliklerini Temizle

# Default: C
accessClearSubpartPreferences=Alt Bölüm Önceliklerini Temizle

# Default: C
accessClearInstructorPreferences=Eğitimci Önceliklerini Temizle

# Default: T
accessAddTimePreference=Zaman Önceliğini Ekle

# Default: G
accessAddRoomGroupPreference=Salon Grup Önceliğini Ekle

# Default: R
accessAddRoomPreference=Salon Önceliğini Ekle

# Default: D
accessAddBuildingPreference=Bina Önceliğini Ekle

# Default: F
accessAddRoomFeaturePreference=Oda Özelliği Önceliğini Ekle

# Default: S
accessSaveExamination=Sınavı Kaydet

# Default: S
accessSaveConfiguration=Yapılandırmayı Kaydet

# Default: I
accessAddInstructor=Eğitimci Ekle

# Default: A
accessAddNewInstructor=Yeni Eğitimci Ekle

# Default: X
accessAddExamination=Sınav Ekle

# Default: E
accessEditSubpart=Alt Bölümü Düzenle

# Default: D
accessDeleteConfiguration=Yapılandırmayı Kaldır

# Default: A
accessAddInstructionalTypeToConfig=Yapılandırmada Eğitici Türü Ekle

# Default: A
accessAddCourseToCrossList=Çapraz Listeye Ders Ekle

# Default: I
accessBackToIOList=Girdi-Çıktı Listesine Geri Dön

# Default: C
accessAddCoordinator=Koordinatör Ekle

# Default: U
accessUpdateClassInstructorsAssignment=Sınıf Eğiticisinin Görevini Güncelle

# Default: C
accessAddConfiguration=Yapılandırma Ekle

# Default: L
accessCrossLists:Çapraz Listeler

# Default: F
accessMakeOffered=Teklif Yapıldı

# Default: F
accessMakeNotOffered=Teklif Yapılmadı

# Default: B
accessBackToIOListButton=Girdi-Çıktı Listesi Butonuna Geri Dön

# Default: D
accessDeleteIO=Girdi-Çıktıyı Sil

# Default: X
accessLockIO=Girdi-Çıktıyı Kilitle

# Default: X
accessUnlockIO=Girdi-Çıktı Kilidini Aç

# Default: B
accessBackIODetail=Girdi-Çıktı Detayına Geri Dön

# Default: M
accessManageInstructorList=Eğitimci Listesini Yönet

# Default: E
accessSelectInstructor=Eğitimci Seç

# Default: C
accessCancel=İptal Et

# Default: S
accessSaveInstructor=Eğitimciyi Kaydet

3 Default: U
accessUpdateInstructor=Eğitimciyi Göncelle

# Default: D
accessDeleteInstructor=Eğitimciyi Sil

# Default: L
accessLookupInstructor=Eğitimciye Göz At

# Default: B
accessBackToInstructors=Eğitimcilere Geri Dön

# Default: Search/Display Offerings (Alt+{0})
titleSearchInstructionalOfferings(String accessKey)=Eğitimci Teklifleri Ara/Görüntüle

# Default: Search/Display Classes (Alt+{0})
titleSearchClasses(String accessKey)=Sınıfları Ara/Görüntüle

# Default: Search/Display Instructors (Alt+{0})
titleSearchInstructors(String accessKey)=Eğitimcileri Ara/Görüntüle

# Default: Export PDF (Alt+{0})
titleExportPdf(String accessKey)=PDF Dosyasını Dışa Aktar

# Default: Export Worksheet PDF (Alt+{0})
titleWorksheetPdf(String accessKey)=PDF Çalışma Sayfasını Dışa Aktar

# Default: Add New Offering (Alt+{0})
titleAddNewInstructionalOffering(String accessKey)=Yeni Eğitici Teklif Ekle

# Default: Edit Class (Alt+{0})
titleEditClass(String accessKey)=Sınıfı Düzenle

# Default: Add Distribution Preference (Alt+{0})
titleAddDistributionPreference(String accessKey)=Dağılım Önceliğini Ekle

# Default: Open Class Assignment Dialog (Alt+{0})
titleOpenClassAssignmentDialog(String accessKey)=

# Default: Previous Class (Alt+{0})
titlePreviousClass(String accessKey)=

# Default: Update and go to previous Class (Alt+{0})
titlePreviousClassWithUpdate(String accessKey)=

# Default: Previous Scheduling Subpart (Alt+{0}
titlePreviousSubpart(String accessKey)=

# Default: Update and go to previous Scheduling Subpart (Alt+{0})
titlePreviousSubpartWithUpdate(String accessKey)=

# Default: Previous Instructional Offering (Alt+{0})
titlePreviousIO(String accessKey)=

# Default: Update and go to previous Instructional Offering (Alt+{0})
titlePreviousIOWithUpdate(String accessKey)=

# Default: Update and go to previous Instructor (Alt+{0})
titlePreviousInstructorWithUpdate(String accessKey)=

# Default: Update and go to previous Examination (Alt+{0})
titlePreviousExaminationWithUpdate(String accessKey)=

# Default: Next Class (Alt+{0})
titleNextClass(String accessKey)=

	@DefaultMessage("Update and go to next Class (Alt+{0})")
	String titleNextClassWithUpdate(String accessKey);

	@DefaultMessage("Next Scheduling Subpart (Alt+{0})")
	String titleNextSubpart(String accessKey);

	@DefaultMessage("Update and go to next Scheduling Subpart (Alt+{0})")
	String titleNextSubpartWithUpdate(String accessKey);

	@DefaultMessage("Next Instructional Offering (Alt+{0})")
	String titleNextIO(String accessKey);

	@DefaultMessage("Update and go to next Instructional Offering (Alt+{0})")
	String titleNextIOWithUpdate(String accessKey);

	@DefaultMessage("Update and go to next Instructor (Alt+{0})")
	String titleNextInstructorWithUpdate(String accessKey);

	@DefaultMessage("Update and go to next Examination (Alt+{0})")
	String titleNextExaminationWithUpdate(String accessKey);

	@DefaultMessage("Update Examination (Alt+{0})")
	String titleUpdateExamination(String accessKey);

	@DefaultMessage("Update Configuration (Alt+{0})")
	String titleUpdateConfiguration(String accessKey);

	@DefaultMessage("Update Course Offering (Alt+{0})")
	String titleUpdateCourseOffering(String accessKey);

	@DefaultMessage("Save Course Offering (Alt+{0})")
	String titleSaveCourseOffering(String accessKey);

	@DefaultMessage("Update Cross Lists (Alt+{0})")
	String titleUpdateCrossLists(String accessKey);

	@DefaultMessage("Update Class Setup (Alt+{0})")
	String titleUpdateMultipleClassSetup(String accessKey);

	@DefaultMessage("Return to %% (Alt+{0})")
	String titleBackClassDetail(String accessKey);

	@DefaultMessage("Return to %% (Alt+{0})")
	String titleBackSubpartDetail(String accessKey);

	@DefaultMessage("Do not commit any change. Return to Detail Screen (Alt+{0})")
	String titleBackToDetail(String accessKey);

	@DefaultMessage("Back to Instructional Offering Detail (Alt+{0})")
	String titleBackToIODetail (String accessKey);

	@DefaultMessage("Instructional Offering Detail (Alt+{0})")
	String titleInstructionalOfferingDetail(String accessKey);

	@DefaultMessage("Scheduling Subpart Detail (Alt+{0})")
	String titleSchedulingSubpartDetail(String accessKey);

	@DefaultMessage("Commit changes to database (Alt+{0})")
	String titleUpdatePreferences(String accessKey);

	@DefaultMessage("Delete all Class Preferences. Preferences will be inherited from the subpart (Alt+{0})")
	String titleClearClassPreferences(String accessKey);

	@DefaultMessage("Delete all Subpart Preferences (Alt+{0})")
	String titleClearSubpartPreferences(String accessKey);

	@DefaultMessage("Delete all Instructor Preferences (Alt+{0})")
	String titleClearInstructorPreferences(String accessKey);

	@DefaultMessage("Add Time Pattern Preference (Alt+{0})")
	String titleAddTimePreference(String accessKey);

	@DefaultMessage("Remove Time Pattern")
	String titleRemoveTimePattern();

	@DefaultMessage("Add Room Group Preference (Alt+{0})")
	String titleAddRoomGroupPreference(String accessKey);

	@DefaultMessage("Remove Room Group Preference")
	String titleRemoveRoomGroupPreference();

	@DefaultMessage("Add Room Preference (Alt+{0})")
	String titleAddRoomPreference(String accessKey);

	@DefaultMessage("Add Date Pattern Preference (Alt+{0})")
	String titleAddDatePatternPreference(String accessKey);

	@DefaultMessage("Remove Room Preference")
	String titleRemoveRoomPreference();

	@DefaultMessage("Add Building Preference (Alt+{0})")
	String titleAddBuildingPreference(String accessKey);

	@DefaultMessage("Remove Building Preference")
	String titleRemoveBuildingPreference();

	@DefaultMessage("Add Room Feature Preference (Alt+{0})")
	String titleAddRoomFeaturePreference(String accessKey);

	@DefaultMessage("Remove Room Feature Preference")
	String titleRemoveRoomFeaturePreference();

	@DefaultMessage("Remove Distribution Preference")
	String titleRemoveDistributionPreference();

	@DefaultMessage("Delete Configuration (Alt+{0})")
	String titleDeleteConfiguration(String accessKey);

	@DefaultMessage("Save Examination (Alt+{0})")
	String titleSaveExamination(String accessKey);

	@DefaultMessage("Save Configuration (Alt+{0})")
	String titleSaveConfiguration(String accessKey);

	@DefaultMessage("Add Instructor (Alt+{0})")
	String titleAddInstructor(String accessKey);

	@DefaultMessage("Add New Instructor (Alt+{0})")
	String titleAddNewInstructor(String accessKey);

	@DefaultMessage("Add Instructor to Class")
	String titleAddInstructorToClass();

	@DefaultMessage("Remove Instructor")
	String titleRemoveInstructor();

	@DefaultMessage("Remove Instructor from Class")
	String titleRemoveInstructorFromClass();

	@DefaultMessage("Add Examination (Alt+{0})")
	String titleAddExamination(String accessKey);

	@DefaultMessage("Edit Scheduling Supbart (Alt+{0})")
	String titleEditSubpart(String accessKey);

	@DefaultMessage("Delete all Class Preferences. Preferences will be inherited from the subpart.")
	String titleClearClassPreferencesOnSubpart();

	@DefaultMessage("Add the selected instructional type to the configuration (Alt+{0})")
	String titleAddInstructionalTypeToConfig(String accessKey);

	@DefaultMessage("Add course offering to the instructional offering (Alt+{0})")
	String titleAddCourseToCrossList(String accessKey);

	@DefaultMessage("Move to Child Level")
	String titleMoveToChildLevel();

	@DefaultMessage("Move to Parent Level")
	String titleMoveToParentLevel();

	@DefaultMessage("Delete Instructional Type")
	String titleDeleteInstructionalType();

	@DefaultMessage("Back to Instructional Offering List (Alt+{0})")
	String titleBackToIOList(String accessKey);

	@DefaultMessage("Limits do not match")
	String titleCrossListsLimitsDoNotMatch();

	@DefaultMessage("Limits do not match")
	String titleLimitsDoNotMatch();

	@DefaultMessage("Remove course from instructional offering & mark it as not offered.")
	String titleRemoveCourseFromCrossList();

	@DefaultMessage("Display all instructors of this subpart in the schedule book.")
	String titleDisplayAllInstrForSubpartInSchedBook();

	@DefaultMessage("Enable all classes of this subpart for student scheduling.")
	String titleEnableAllClassesOfSubpartForStudentScheduling();

	@DefaultMessage("Enable these classes for student scheduling.")
	String titleEnableTheseClassesForStudentScheduling();

	@DefaultMessage("Move Class Up")
	String titleMoveClassUp();

	@DefaultMessage("Move Class Down")
	String titleMoveClassDown();

	@DefaultMessage("Remove Class from Instructional Offering")
	String titleRemoveClassFromIO();

	@DefaultMessage("Add a class of this type to Instructional Offering")
	String titleAddClassToIO();

	@DefaultMessage("Add Coordinator (Alt+{0})")
	String titleAddCoordinator(String accessKey);

	@DefaultMessage("Unassign All Instructors")
	String titleUnassignAllInstructorsFromConfig();

	@DefaultMessage("Update Class Instructors (Alt+{0})")
	String titleUpdateClassInstructorsAssignment(String accessKey);

	@DefaultMessage("Add Configuration (Alt+{0})")
	String titleAddConfiguration(String accessKey);

	@DefaultMessage("Add/Delete cross-listed courses and change controlling course Alt+{0})")
	String titleCrossLists(String accessKey);

	@DefaultMessage("Make this offering 'Offered' (Alt+{0})")
	String titleMakeOffered(String accessKey);

	@DefaultMessage("Make this offering 'Not Offered' (Alt+{0})")
	String titleMakeNotOffered(String accessKey);

	@DefaultMessage("Delete Instructional Offering (Alt+{0})")
	String titleDeleteIO(String accessKey);

	@DefaultMessage("Lock Offering (Alt+{0})")
	String titleLockIO(String accessKey);

	@DefaultMessage("Unlock Offering (Alt+{0})")
	String titleUnlockIO(String accessKey);

	@DefaultMessage("Return to %% (Alt+{0})")
	String titleBackIODetail(String accessKey);

	@DefaultMessage("Controlling Course")
	String titleControllingCourse();

	@DefaultMessage("Edit Course Offering")
	String titleEditCourseOffering();

	@DefaultMessage("Unlimited Enrollment")
	String titleUnlimitedEnrollment();

	@DefaultMessage("Set Up Configuration")
	String titleEditConfiguration();

	@DefaultMessage("Multiple Class Setup")
	String titleClassSetup();

	@DefaultMessage("Class Instructor Assignment")
	String titleAssignInstructors();

	@DefaultMessage("Add Instructor from Staff / Remove from Dept List (Alt+{0})")
	String titleManageInstructorList(String accessKey);

	@DefaultMessage("Instructor ExternalId not supplied")
	String titleInstructorExternalIdNotSupplied();

	@DefaultMessage("Do Not Display Instructor.")
	String titleDoNotDisplayInstructor();

	@DefaultMessage("check conflicts")
	String titleCheckConflicts();

	@DefaultMessage("Midterm Examination")
	String titleMidtermExamination();

	@DefaultMessage("Final Examination")
	String titleFinalExamination();

	@DefaultMessage("Ignore too far distances")
	String titleIgnoreTooFarDistances();

	@DefaultMessage("Select Instructor (Alt+{0})")
	String titleSelectInstructor(String accessKey);

	@DefaultMessage("Cancel (Alt+{0})")
	String titleCancel(String accessKey);

	@DefaultMessage("Save Instructor Information (Alt+{0})")
	String titleSaveInstructor(String accessKey);

	@DefaultMessage("Update Instructor (Alt+{0})")
	String titleUpdateInstructor(String accessKey);

	@DefaultMessage("Delete Instructor (Alt+{0})")
	String titleDeleteInstructor(String accessKey);

	@DefaultMessage("Look for matches in Staff List and Directory (Alt+{0})")
	String titleLookupInstructor(String accessKey);

	@DefaultMessage("Back to Instructors (Alt+{0})")
	String titleBackToInstructors(String accessKey);

	@DefaultMessage("Cancel this class.")
	String titleCancelClass();

	@DefaultMessage("Reopen this class.")
	String titleReopenClass();

	@DefaultMessage("Course numbers can be specified using wildcard (*). E.g. 2*")
	String tooltipCourseNumber();

	@DefaultMessage("Subject Area")
	String labelSubjectArea();

	@DefaultMessage("No records matching the search criteria were found.")
	String errorNoRecords();

	@DefaultMessage("Instructional Offerings")
	String labelInstructionalOfferings();

	@DefaultMessage("Unable to create PDF file: {0}.")
	String errorUnableToCreatePdf(String reason);

	@DefaultMessage("Unable to create worksheet PDF file: nothing to export.")
	String errorUnableToCreateWorksheetPdfNoData();

	@DefaultMessage("Unable to create worksheet PDF file: {0}.")
	String errorUnableToCreateWorksheetPdf(String reason);

	@DefaultMessage("Course Number cannot be matched to regular expression: {0}. Reason: {1}")
	String errorCourseDoesNotMatchRegEx(String regEx, String reason);

	@DefaultMessage("ERRORS") //preferable to use this than errors for each page
	String errors();

	@DefaultMessage("ERRORS")
	String errorsClassDetail();

	@DefaultMessage("ERRORS")
	String errorsSubpartDetail();

	@DefaultMessage("ERRORS")
	String errorsClassEdit();

	@DefaultMessage("ERRORS")
	String errorsSubpartEdit();

	@DefaultMessage("ERRORS")
	String errorsConfigurationEdit();

	@DefaultMessage("ERRORS")
	String errorsIOCrossLists();

	@DefaultMessage("ERRORS")
	String errorsMultipleClassSetup();

	@DefaultMessage("Invalid room group: Check for duplicate / blank selection. ")
	String errorInvalidRoomGroup();

	@DefaultMessage("Invalid room group level. ")
	String errorInvalidRoomGroupLevel();

	@DefaultMessage("Invalid building preference: Check for duplicate / blank selection. ")
	String errorInvalidBuildingPreference();

	@DefaultMessage("Invalid building preference level. ")
	String errorInvalidBuildingPreferenceLevel();

	@DefaultMessage("Invalid distribution preference: Check for duplicate / blank selection. ")
	String errorInvalidDistributionPreference();

	@DefaultMessage("Invalid date pattern preference: Check for duplicate / blank selection. ")
	String errorInvalidDatePatternPreference();

	@DefaultMessage("Invalid distribution preference level.")
	String errorInvalidDistributionPreferenceLevel();

	@DefaultMessage("Invalid room feature preference: Check for duplicate / blank selection. ")
	String errorInvalidRoomFeaturePreference();

	@DefaultMessage("Invalid room feature preference level. ")
	String errorInvalidRoomFeaturePreferenceLevel();

	@DefaultMessage("Invalid instructor preference: Check for duplicate / blank selection. ")
	String errorInvalidInstructorPreference();

	@DefaultMessage("Time pattern not selected. ")
	String errorTimePatternNotSelected();

	@DefaultMessage("Invalid room preference: Check for duplicate / blank selection. ")
	String errorInvalidRoomPreference();

	@DefaultMessage("Invalid room preference level. ")
	String errorInvalidRoomPreferenceLevel();

	@DefaultMessage("Null Operation not supported.")
	String errorNullOperationNotSupported();

	@DefaultMessage("Class Info not supplied.")
	String errorClassInfoNotSupplied();

	@DefaultMessage("Subpart Info not supplied.")
	String errorSubpartInfoNotSupplied();

	@DefaultMessage("Number of Rooms cannot be less than 0.")
	String errorNumberOfRoomsNegative();

	@DefaultMessage("Room Ratio cannot be less than 0.")
	String errorRoomRatioNegative();

	@DefaultMessage("Minimum Expected Capacity cannot be less than 0.")
	String errorMinimumExpectedCapacityNegative();

	@DefaultMessage("Maximum Expected Capacity cannot be less than 0.")
	String errorMaximumExpectedCapacityNegative();

	@DefaultMessage("Maximum Expected Capacity cannot be less than Minimum Expected Capacity.")
	String errorMaximumExpectedCapacityLessThanMinimum();

	@DefaultMessage("Class Owner is required.")
	String errorRequiredClassOwner();

	@DefaultMessage("Notes to schedule manager cannot exceed 999 characters.")
	String errorNotesLongerThan999();

	@DefaultMessage("Schedule print note cannot exceed 1999 characters.")
	String errorSchedulePrintNoteLongerThan1999();

	@DefaultMessage("Required room {0} (capacity: {1}) cannot accommodate this class (capacity: {2})")
	String errorRequiredRoomTooSmall(String room, int roomCapacity, int requiredCapacity);

	@DefaultMessage("User temporarily locked out - Exceeded maximum failed login attempts.")
	String errorUserTemporarilyLockedOut();

	@DefaultMessage("Authentication failed")
	String errorAuthenticationFailed();

	@DefaultMessage("Operation could not be interpreted: ")
	String errorOperationNotInterpreted();

	@DefaultMessage("Course Offering data was not correct: ")
	String errorCourseDataNotCorrect();

	@DefaultMessage("Config ID is not valid: ")
	String errorConfigIDNotValid();

	@DefaultMessage("Subject is required.")
	String errorSubjectRequired();

	@DefaultMessage("Course Number is required.")
	String errorCourseNumberRequired();

	@DefaultMessage("Course Number cannot be matched to regular expression: {0} . Reason: {1}")
	String errorCourseNumberCannotBeMatched(String regularExpression, String reason);

	@DefaultMessage("The course cannot be renamed. A course with the same course number already exists.")
	String errorCourseCannotBeRenamed();

	@DefaultMessage("The course cannot be created. A course with the same course number already exists.")
	String errorCourseCannotBeCreated();

	@DefaultMessage("Reserved spaces should total to at least the limit")
	String errorCrossListsLimitsDoNotMatch();

	@DefaultMessage("Course Offering is required")
	String errorRequiredCourseOffering();

	@DefaultMessage("Controlling Course is required")
	String errorRequiredControllingCourse();

	@DefaultMessage("Reserved Space is required")
	String errorRequiredReservedSpace();

	@DefaultMessage("Unique Id needed for operation. ")
	String errorUniqueIdNeeded();

	@DefaultMessage("Class is required")
	String errorRequiredClass();

	@DefaultMessage("Instructional Offering Configuration is required")
	String errorRequiredIOConfiguration();

	@DefaultMessage("The configuration requires that <b>{0}</b> have at least one child class.")
	String errorClassMustHaveChildClasses(String parentClass);

	@DefaultMessage("The configuration requires that each scheduling subpart have at least one associated class.")
	String errorEachSubpartMustHaveClass();

	@DefaultMessage("Maximum limit for class {0} cannot be less than the minimum limit for the class.")
	String errorMaxLessThanMinLimit(String classWithWrongLimits);

	@DefaultMessage("Maximum limits for each top level class type must total to greater than or equal to the offering limit.")
	String errorMaxLimitsTotalTooLow();

	@DefaultMessage("Limits for each top level class type must total to greater than or equal to the offering limit.")
	String errorLimitsForTopLevelClassesTooLow();

	@DefaultMessage("Maximum limits for child classes of the same type at a level must total to at least the parent class maximum limit.")
	String errorTotalMaxChildrenAtLeastMaxParent();

	@DefaultMessage("Minimum limits for child classes of the same type at a level must total to greater than or equal to the parent class minimum limit.")
	String errorTotalMinChildrenAtLeastMinParent();

	@DefaultMessage("Limits for child classes of the same type at a level must total to greater than or equal to the parent class limit.")
	String errorLimitsChildClasses();

	@DefaultMessage("Missing Instructional Offering Configuration.")
	String errorMissingIOConfig();

	@DefaultMessage("Instructional Offering Config has not been defined.")
	String errorIOConfigNotDefined();

	@DefaultMessage("Initial setup of Instructional Offering Config has not been completed.")
	String errorInitialIOSetupIncomplete();

	@DefaultMessage("Duplicate instructor for class.")
	String errorDuplicateInstructorForClass();

	@DefaultMessage("Spaces reserved for course offerings ({0}) should total to at least the offering limit.")
	String errorReservedSpacesForOfferingsTotal(String coursesTotal);

	@DefaultMessage("Configuration {0} has a higher limit than there is space available in its classes.")
	String errorConfigWithTooHighLimit(String configuration);

	@DefaultMessage("Configurations {0} have a higher limit than there is space available in their classes.")
	String errorConfigsWithTooHighLimit(String configurations);

	@DefaultMessage("Department is required.")
	String errorRequiredDepartment();

	@DefaultMessage("No instructors for the selected department were found.")
	String errorNoInstructorsFoundForDepartment();

	@DefaultMessage("No instructors were found. Use the option 'Manage Instructor List' to add instructors to your list.")
	String errorNoInstructorsFoundInSearch();

	@DefaultMessage("Supply one or more of the following information: Account Name / First Name / Last Name")
	String errorSupplyInfoForInstructorLookup();

	@DefaultMessage("Last Name is required.")
	String errorRequiredLastName();

	@DefaultMessage("This Instructor Id already exists in your instructor list.")
	String errorInstructorIdAlreadyExistsInList();

	@DefaultMessage("No matching records found")
	String errorNoMatchingRecordsFound();

	@DefaultMessage("No instructor was selected from the list")
	String errorNoInstructorSelectedFromList();

	@DefaultMessage("Instructor Info not supplied.")
	String exceptionInstructorInfoNotSupplied();

	@DefaultMessage("Access Denied.")
	String exceptionAccessDenied();

	@DefaultMessage("Operation could not be interpreted: ")
	String exceptionOperationNotInterpreted();

	@DefaultMessage("Missing Instructional Offering Config.")
	String exceptionMissingIOConfig();

	@DefaultMessage("Instructional Offering Config has not been defined.")
	String exceptionIOConfigUndefined();

	@DefaultMessage("Initial setup of Instructional Offering Config has not been completed.")
	String exceptionInitialIOSetupIncomplete();

	@DefaultMessage("Instructional Offering data was not correct: ")
	String exceptionIODataNotCorrect();

	@DefaultMessage("Generated method 'validate(...)' not implemented.")
	String exceptionValidateNotImplemented();

	@DefaultMessage("Course Offering Id need for operation. ")
	String exceptionCourseOfferingIdNeeded();

	@DefaultMessage("You do not have any department to manage. ")
	String exceptionNoDepartmentToManage();

	@DefaultMessage("Null Operation not supported.")
	String exceptionNullOperationNotSupported();

	@DefaultMessage("Name")
	String sortByName();

	@DefaultMessage("External Id")
	String sortByDivSec();

	@DefaultMessage("Enrollment")
	String sortByEnrollment();

	@DefaultMessage("Limit")
	String sortByLimit();

	@DefaultMessage("Room Size")
	String sortByRoomSize();

	@DefaultMessage("Date Pattern")
	String sortByDatePattern();

	@DefaultMessage("Time Pattern")
	String sortByTimePattern();

	@DefaultMessage("Instructor")
	String sortByInstructor();

	@DefaultMessage("Assigned Time")
	String sortByAssignedTime();

	@DefaultMessage("Assigned Room")
	String sortByAssignedRoom();

	@DefaultMessage("Assigned Room Capacity")
	String sortByAssignedRoomCapacity();

	@DefaultMessage("Classes ({0})")
	String backClasses(String classes);

	@DefaultMessage("Class ({0})")
	String backClass(String className);

	@DefaultMessage("Scheduling Subpart ({0})")
	String backSubpart(String subpartName);

	@DefaultMessage("Instructional Offering ({0})")
	String backInstructionalOffering(String ioName);

	@DefaultMessage("Instructors ({0})")
	String backInstructors(String deptName);

	@DefaultMessage("Instructor ({0})")
	String backInstructor(String instructorName);

	@DefaultMessage("Instructors")
	String backInstructors2(); //when there is no department selected in the Instructors screen

	@DefaultMessage("Not Found")
	String valueInstructorAccountNameNotFound();

	@DefaultMessage("Not Set")
	String valueNotSet();

	@DefaultMessage("am")
	String timeAm();

	@DefaultMessage("pm")
	String timePm();

	@DefaultMessage("None Required")
	String noConsentRequired();

	@DefaultMessage("No preferences found")
	String noPreferencesFound();

	@DefaultMessage("Class Assignment")
	String dialogClassAssignment();

	@DefaultMessage("Timetable")
	String sectionTitleTimetable();

	@DefaultMessage("Preferences")
	String sectionTitlePreferences();

	@DefaultMessage("Time Preferences")
	String sectionTitleTimePreferences();

	@DefaultMessage("Room Group Preferences")
	String sectionTitleRoomGroupPreferences();

	@DefaultMessage("Room Preferences")
	String sectionTitleRoomPreferences();

	@DefaultMessage("Building Preferences")
	String sectionTitleBuildingPreferences();

	@DefaultMessage("Room Feature Preferences")
	String sectionTitleRoomFeaturePreferences();

	@DefaultMessage("Examination Period Preferences")
	String sectionTitleExaminationPeriodPreferences();

	@DefaultMessage("Distribution Preferences")
	String sectionTitleDistributionPreferences();

	@DefaultMessage("Date Pattern Preferences")
	String sectionTitleDatePatternPreferences();

	@DefaultMessage("Instructors")
	String sectionTitleInstructors();

	@DefaultMessage("Requests / Notes to Schedule Manager")
	String sectionTitleNotesToScheduleManager();

	@DefaultMessage("Classes")
	String sectionTitleClasses();

	@DefaultMessage("Examinations")
	String sectionTitleExaminations();

	@DefaultMessage("Examination")
	String sectionTitleExamination();

	@DefaultMessage("Configuration ")
	String sectionTitleConfiguration();

	@DefaultMessage("Instructor List")
	String sectionTitleInstructorList();

	@DefaultMessage("Search Results")
	String sectionTitleSearchResults();

	@DefaultMessage("External Lookup Match")
	String sectionTitleExternalLookupMatch();

	@DefaultMessage("Staff File Matches")
	String sectionTitleStaffFileMatches();

	@DefaultMessage("Conflicting Classes")
	String sectionTitleClassConflicts();

	@DefaultMessage("Instructor Displayed")
	String titleInstructorDisplayed();

	@DefaultMessage("Instructor Not Displayed")
	String titleInstructorNotDisplayed();

	@DefaultMessage("Enabled for Student Scheduling")
	String titleEnabledForStudentScheduling();

	@DefaultMessage("Disabled for Student Scheduling")
	String titleNotEnabledForStudentScheduling();

	@DefaultMessage("Are you sure you want to set room size to a value different from expected capacity? Continue?")
	String confirmRoomSizeDifferentFromCapacity();

	@DefaultMessage("Do you want to apply instructor preferences to this class?")
	String confirmApplyInstructorPreferencesToClass();

	@DefaultMessage("Do you want to remove any instructor preferences \\nthat may have been applied to this class?")
	String confirmRemoveInstructorPreferencesFromClass();

	@DefaultMessage("Do you really want to clear all class preferences?")
	String confirmClearAllClassPreferences();

	@DefaultMessage("This will create {0} classes. Continue?")
	String confirmCreateTooManyClasses();

	@DefaultMessage("This operation may result in deletion of existing subparts/classes . Continue?")
	String confirmMayDeleteSubpartsClasses();

	@DefaultMessage("This operation will delete existing subparts and associated classes . Continue?")
	String confirmDeleteExistingSubpartsClasses();

	@DefaultMessage("Do you really want to unassign all instructors?")
	String confirmUnassignAllInstructors();

	@DefaultMessage("Do you really want to make this offering offered?")
	String confirmMakeOffered();

	@DefaultMessage("Do you really want to make this offering not offered?")
	String confirmMakeNotOffered();

	@DefaultMessage("This option will delete all associated course offerings. \\nDo you really want to delete this offering?")
	String confirmDeleteIO();

	@DefaultMessage("Any instructor class assignments will be deleted as well. Continue?")
	String confirmDeleteInstructor();

	@DefaultMessage("Select an instructor")
	String alertSelectAnInstructor();

	@DefaultMessage("More Options &gt;&gt;&gt;")
	String selectMoreOptions();

	@DefaultMessage("&lt;&lt;&lt; Less Options")
	String selectLessOptions();

	@DefaultMessage("If checked, spread in time constraint will be automatically posted between classes of this subpart.")
	String descriptionAutomaticSpreadInTime();

	@DefaultMessage("If checked, students will be allowed to take classes from this subpart even when they are overlapping with other classes.")
	String descriptionStudentOverlaps();

	@DefaultMessage("Only course offerings that are not offered can be added into a cross-list.")
	String hintCrossLists();

	@DefaultMessage("If checked, only students meeting reservations will be allowed to enroll into the offering.")
	String descriptionByReservationOnly();

	@DefaultMessage("Only students meeting reservations are allowed to enroll into this offering.")
	String descriptionByReservationOnly2();

	@DefaultMessage("Yes")
	String yes();

	@DefaultMessage("No")
	String no();

	@DefaultMessage("Not Specified")
	String instructorPositionNotSpecified();

	@DefaultMessage("Not Specified")
	String instructorExternalIdNotSpecified();

	@DefaultMessage("New Enrollment Deadline:")
	String propertyLastWeekEnrollment();

	@DefaultMessage("Number of weeks during which students are allowed to enroll to this course, defaults to {0} when left blank.")
	String descriptionLastWeekEnrollment(String wkEnrollmentDefault);

	@DefaultMessage("Student are allowed to enroll to this course up to {0}. week of classes.")
	String textLastWeekEnrollment(String wkEnrollment);

	@DefaultMessage("Weeks start on the day of session start date, number of weeks is relative to class start ({0}).")
	String descriptionEnrollmentDeadlines(String weekStartDayOfWeek);

	@DefaultMessage("Class Changes Deadline:")
	String propertyLastWeekChange();

	@DefaultMessage("Number of weeks during which students are allowed to change existing enrollments, defaults to {0} when left blank.")
	String descriptionLastWeekChange(String wkChangeDefault);

	@DefaultMessage("Student are allowed to change existing enrollments up to {0}. week of classes.")
	String textLastWeekChange(String wkChange);

	@DefaultMessage("Course Drop Deadline:")
	String propertyLastWeekDrop();

	@DefaultMessage("Number of weeks during which students are allowed to drop from this course, defaults to {0} when left blank.")
	String descriptionLastWeekDrop(String wkDropDefault);

	@DefaultMessage("Student are allowed to drop from this course up to {0}. week of classes.")
	String textLastWeekDrop(String wkDrop);

	@DefaultMessage("if (showGwtLoading) { showGwtLoading('Locking {0}...'); } return true;")
	String jsSubmitLockIO(String instrOfferingName);

	@DefaultMessage("if (showGwtLoading) { showGwtLoading('Unlocking {0}...'); } return true;")
	String jsSubmitUnlockIO(String instrOfferingName);

	@DefaultMessage("Course {0} is locked (students are not able to enroll to this course).")
	String lockedCourse(String course);

	@DefaultMessage("Courses {0} and {1} are locked.")
	String lockedCourses(String course1, String course2);

	@DefaultMessage("{0} ({1} seats)")
	String labelLocationLabelWithCapacity(String label, int capacity);

	@DefaultMessage("Unassigned {0}")
	String classNoteUnassigned(String assignment);

	@DefaultMessage("Assigned {0}")
	String classNoteAssigned(String assignment);

	@DefaultMessage("Reassigned {0} >> {1}")
	String classNoteReassigned(String oldAssignment, String newAssignment);

	@DefaultMessage("N/A")
	String classMeetingsNotApplicable();

	@DefaultMessage("Area:")
	String propertyRoomArea();

	@DefaultMessage("square feet")
	String roomAreaUnitsLong();

	@DefaultMessage("ft&sup2;")
	String roomAreaUnitsShort();

	@DefaultMessage("Area [ft&sup2;]")
	String columnArea();

	@DefaultMessage("Area [ft2]")
	String columnAreaPDF();

	@DefaultMessage("square meters")
	String roomAreaMetricUnitsLong();

	@DefaultMessage("m&sup2;")
	String roomAreaMetricUnitsShort();

	@DefaultMessage("Area [m&sup2;]")
	String columnAreaMetric();

	@DefaultMessage("Area [m2]")
	String columnAreaMetricPDF();

	@DefaultMessage("System Default (Minutes per Week)")
	String systemDefaultDurationType();

	@DefaultMessage("Session Default ({0})")
	String sessionDefault(String value);

	@DefaultMessage("Class Duration:")
	String propertyClassDurationType();

	@DefaultMessage("Class {0} is cancelled.")
	String classNoteCancelled(String name);

	@DefaultMessage("Class {0} is reopened.")
	String classNoteReopened(String name);

	@DefaultMessage("Class {0} conflicts with {1}.")
	String classIsConflicting(String name, String conflicts);

	@DefaultMessage("Instructional Method:")
	String propertyInstructionalMethod();

	@DefaultMessage("Not Selected")
	String selectNoInstructionalMethod();
}